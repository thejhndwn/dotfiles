#!/bin/bash



echo 'running plan command...'

echo 

TODAY_DATE=$(date +"/%Y/%m/%d")
TOMORROW_DATE=$(date -d "tomorrow" +"/%Y/%m/%d")
TODAY_YEAR=$(date +"/%Y")
PLANNER_DIR="$DOTFILES_ROOT/plan"
HIGHLIGHTS_DIR="$PLANNER_DIR/highlights"
NOTES_DIR="$PLANNER_DIR/notes"
TODO_DIR="$PLANNER_DIR/todo"
GOALS_DIR="$PLANNER_DIR/goals"
TODAYS_TODO_FILE="$TODO_DIR$TODAY_DATE.md"
TODAYS_HIGHLIGHTS_FILE="$HIGHLIGHTS_DIR$TODAY_YEAR.md"
TODAYS_NOTES_FILE="$NOTES_DIR$TODAY_DATE.md"
TODAYS_GOALS_FILE="$GOALS_DIR$TODAY_YEAR.md"
TOMORROWS_TODO_FILE="$TODO_DIR$TOMORROW_DATE.md"


handle_missing_todo(){
    local file="$1"
    local last_entry=$(find "$TODO_DIR" -type f -name "*.md" | sort | tail -n 1)
    echo "last planner entry: $last_entry"
    grep -v -E  "^-\s*\[[Xx]\]" "$last_entry" > "$file" 
    vim "$file"
}

case "$1" in 
    "todo")
        case "$2" in
            "")
                if [[ -f "$TODAYS_TODO_FILE" ]]; then
                    echo "file exists, open file"
                    cat "$TODAYS_TODO_FILE"
                else
                    echo "today's file doesn't exist, make new one"
                    handle_missing_todo "$TODAYS_TODO_FILE"
                fi 
            ;;
            "tom"|"-t"|"--t"|"t")
                if [[ -f "$TOMORROWS_TODO_FILE" ]]; then
                    echo "file exists, open file"
                    vim "$TOMORROWS_TODO_FILE"
                else
                    echo "today's file doesn't exist, make new one"
                    handle_missing_todo "$TOMORROWS_TODO_FILE"
                fi 
            ;;
            "v"|"-v"|"--v")
                vim "$TODAYS_TODO_FILE"
            ;;
            # TODO: add flags for different todo granularities, like a for all, d for directory
            "mark"|"m"|"-m"|"--mark")
                case "$3" in
                    "")
                        #TODO: enter mark mode
                        echo 'entering todo completion marker mode'
                        plan-marker "$TODAYS_TODO_FILE"
                        ;;
                    *)
                        if [[ "$3" =~ ^[0-9]+$ ]]; then
                            # TODO: check if the todo item exists, make todo items getter 
                            # if it does then remove and exit, if it doesn't then reply 
                            echo 'entered specific marker mode'
                        else
                            echo "unknown command: $3"
                        fi
                        ;;
                esac
                ;;
            "new"|"n"|"-n"|"--new")
                case "$3" in 
                    "today"|"t"|"-t"|"--t"|"--today") 
                        # TODO: insert next text in today's todo
                        echo "let's insert $4"
                        ;; 
                    "project"|"p"|"-p"|"--p"|"--project")
                        # TODO: insert next text in projects todo
                        ;;
                    "quick"|"q"|"-q"|"--q"|"--quick")
                        # TODO; same
                        ;;
                    "future"|"f"|"-f"|"--f"|"--future")
                        # TODO: same
                        ;;
                    *)
                        # TODO: insert into misc, but make sure it stops random commands
                        ;;
                esac
            ;;
        esac
    ;;
    "goals")
        if [[ -z $2 ]]; then 
            cat "$TODAYS_GOALS_FILE"
        else
            vim "$TODAYS_GOALS_FILE"
        fi
    ;;
    "highlights")
        if [[ -z $2 ]]; then
            cat "$TODAYS_HIGHLIGHTS_FILE"
        elif [[ "$2" == "-v" ]]; then
            vim "$TODAYS_HIGHLIGHTS_FILE"
        else
            echo "[$(date +"%Y-%m-%d")] $2" >> $TODAYS_HIGHLIGHTS_FILE
        fi
    ;;
    # TODO: check for existing file, generate if required
    "notes")
        if [[ ! -f $TODAYS_NOTES_FILE ]]; then
            touch $TODAYS_NOTES_FILE
        fi
        # No second argument? Default behavior
        if [[ -z "$2" ]]; then
            cat "$TODAYS_NOTES_FILE"
        elif [[ "$2" == "-v" ]]; then 
                vim "$TODAYS_NOTES_FILE"
        else
            # Append timestamped note
            note_text="${@:2}"  # everything after 'notes'
            timestamp=$(date +"%Y-%m-%d %H:%M:%S")
            echo "[$timestamp] $note_text" >> "$TODAYS_NOTES_FILE"
        fi
    ;;

    "help"|"--help"|"")
        echo "  todo        Show today's todos"
        ;;
    *)
        echo "Unknown command: $1"
        echo "What are you trying to do :/"
        ;;
esac
